version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6
    container_name: p2p-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: p2p-trading
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - p2p-network

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: p2p-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - p2p-network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: p2p-server
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/p2p-trading?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secret_jwt_key_change_this
      JWT_REFRESH_SECRET: your_refresh_token_secret
      CLIENT_URL: http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    networks:
      - p2p-network

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: p2p-client
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_WS_URL: http://localhost:5000
    depends_on:
      - server
    networks:
      - p2p-network

volumes:
  mongodb_data:
  redis_data:

networks:
  p2p-network:
    driver: bridge
