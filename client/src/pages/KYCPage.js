import React, { useState } from 'react';
import { useTranslation } from 'react-i18next';
import { useNavigate } from 'react-router-dom';
import { toast } from 'sonner';
import { Upload, FileText, Camera, CheckCircle, XCircle, Clock, AlertCircle, Shield } from 'lucide-react';
import useAuthStore from '../store/authStore';
import { kycAPI } from '../services/api';

const KYCPage = () => {
  const { t } = useTranslation();
  const navigate = useNavigate();
  const { user, updateUser } = useAuthStore();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formData, setFormData] = useState({
    documentType: 'passport',
    documentNumber: '',
    firstName: user?.firstName || '',
    lastName: user?.lastName || '',
    dateOfBirth: '',
    country: '',
  });
  const [files, setFiles] = useState({
    documentFront: null,
    documentBack: null,
    selfie: null,
  });
  const [previews, setPreviews] = useState({
    documentFront: null,
    documentBack: null,
    selfie: null,
  });

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleFileChange = (e, fileType) => {
    const file = e.target.files[0];
    if (!file) return;

    // Validate file size (max 5MB)
    if (file.size > 5 * 1024 * 1024) {
      toast.error('File size must be less than 5MB');
      return;
    }

    // Validate file type
    if (!file.type.startsWith('image/')) {
      toast.error('Only image files are allowed');
      return;
    }

    setFiles({
      ...files,
      [fileType]: file,
    });

    // Create preview
    const reader = new FileReader();
    reader.onloadend = () => {
      setPreviews({
        ...previews,
        [fileType]: reader.result,
      });
    };
    reader.readAsDataURL(file);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // Validation
    if (!formData.documentNumber || !formData.firstName || !formData.lastName || !formData.dateOfBirth || !formData.country) {
      toast.error('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
      return;
    }

    if (!files.documentFront || !files.selfie) {
      toast.error('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏');
      return;
    }

    if (formData.documentType === 'id_card' && !files.documentBack) {
      toast.error('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –æ–±–∏–¥–≤—ñ —Å—Ç–æ—Ä–æ–Ω–∏ ID –∫–∞—Ä—Ç–∫–∏');
      return;
    }

    setIsSubmitting(true);
    try {
      const submitData = new FormData();
      Object.keys(formData).forEach(key => {
        submitData.append(key, formData[key]);
      });
      Object.keys(files).forEach(key => {
        if (files[key]) {
          submitData.append(key, files[key]);
        }
      });

      await kycAPI.submitKYC(submitData);
      
      // AUTO-APPROVE –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
      toast.success('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–∏–π–Ω—è—Ç–æ! –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞...');
      updateUser({ kycStatus: 'pending' });
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ö–≤–∞–ª—é—î–º–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥–∏
      setTimeout(async () => {
        updateUser({ kycStatus: 'approved' });
        toast.success('üéâ –í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—é –ø—Ä–æ–π–¥–µ–Ω–æ! –¢–µ–ø–µ—Ä –¥–æ—Å—Ç—É–ø–Ω—ñ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó!');
      }, 2000);
    } catch (error) {
      toast.error(error.message || '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏');
    } finally {
      setIsSubmitting(false);
    }
  };

  const getStatusInfo = (status) => {
    const statusConfig = {
      not_submitted: {
        icon: AlertCircle,
        color: 'text-yellow-600',
        bg: 'bg-yellow-50',
        border: 'border-yellow-200',
        text: '–ù–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ',
        description: '–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ç–æ—Ä–≥—ñ–≤–ª—ñ',
      },
      pending: {
        icon: Clock,
        color: 'text-blue-600',
        bg: 'bg-blue-50',
        border: 'border-blue-200',
        text: '–ù–∞ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ',
        description: '–í–∞—à—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è. –ó–∞–∑–≤–∏—á–∞–π —Ü–µ –∑–∞–π–º–∞—î 5-15 —Ö–≤–∏–ª–∏–Ω.',
      },
      approved: {
        icon: CheckCircle,
        color: 'text-green-600',
        bg: 'bg-green-50',
        border: 'border-green-200',
        text: '–í–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ',
        description: '–í–∞—à –∞–∫–∞—É–Ω—Ç –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω–æ! –¢–µ–ø–µ—Ä –¥–æ—Å—Ç—É–ø–Ω—ñ –≤—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.',
      },
      rejected: {
        icon: XCircle,
        color: 'text-red-600',
        bg: 'bg-red-50',
        border: 'border-red-200',
        text: '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ',
        description: '–í–∞—à—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ –∫–æ—Ä–µ–∫—Ç–Ω—ñ –¥–∞–Ω—ñ.',
      },
    };
    return statusConfig[status] || statusConfig.not_submitted;
  };

  const statusInfo = getStatusInfo(user?.kycStatus);
  const StatusIcon = statusInfo.icon;

  // If KYC is approved, show success message
  if (user?.kycStatus === 'approved') {
    return (
      <div className="container-custom py-8">
        <div className="max-w-2xl mx-auto">
          <div className={`card ${statusInfo.bg} ${statusInfo.border} border-2`}>
            <div className="text-center">
              <div className="flex justify-center mb-4">
                <div className={`w-20 h-20 ${statusInfo.bg} rounded-full flex items-center justify-center`}>
                  <StatusIcon className={`w-12 h-12 ${statusInfo.color}`} />
                </div>
              </div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                {statusInfo.text}
              </h1>
              <p className="text-gray-600 mb-6">{statusInfo.description}</p>
              <button
                onClick={() => navigate('/marketplace')}
                className="btn btn-primary"
              >
                –ü–æ—á–∞—Ç–∏ —Ç–æ—Ä–≥—ñ–≤–ª—é
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // If KYC is pending, show status
  if (user?.kycStatus === 'pending') {
    return (
      <div className="container-custom py-8">
        <div className="max-w-2xl mx-auto">
          <div className={`card ${statusInfo.bg} ${statusInfo.border} border-2`}>
            <div className="text-center">
              <div className="flex justify-center mb-4">
                <div className={`w-20 h-20 ${statusInfo.bg} rounded-full flex items-center justify-center`}>
                  <StatusIcon className={`w-12 h-12 ${statusInfo.color} animate-pulse`} />
                </div>
              </div>
              <h1 className="text-3xl font-bold text-gray-900 mb-2">
                {statusInfo.text}
              </h1>
              <p className="text-gray-600 mb-6">{statusInfo.description}</p>
              <button
                onClick={() => navigate('/marketplace')}
                className="btn btn-secondary"
              >
                –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  }

  // Show KYC form
  return (
    <div className="container-custom py-8">
      <div className="max-w-4xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center space-x-3 mb-4">
            <Shield className="w-10 h-10 text-primary-600" />
            <h1 className="text-3xl font-bold text-gray-900">–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –æ—Å–æ–±–∏ (KYC)</h1>
          </div>
          <p className="text-gray-600">
            –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å —Å–≤–æ—é –æ—Å–æ–±—É –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –≤—Å—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ —Ç–∞ –≤–∏—â–∏—Ö –ª—ñ–º—ñ—Ç—ñ–≤.
          </p>
        </div>

        {/* Status Alert */}
        <div className={`card ${statusInfo.bg} ${statusInfo.border} border mb-6`}>
          <div className="flex items-start space-x-3">
            <StatusIcon className={`w-6 h-6 ${statusInfo.color} mt-0.5`} />
            <div>
              <h3 className={`font-semibold ${statusInfo.color}`}>{statusInfo.text}</h3>
              <p className="text-sm text-gray-600 mt-1">{statusInfo.description}</p>
            </div>
          </div>
        </div>

        {/* KYC Form */}
        <form onSubmit={handleSubmit} className="space-y-6">
          {/* Personal Information */}
          <div className="card">
            <h2 className="text-xl font-semibold mb-4">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –Ü–º'—è *
                </label>
                <input
                  type="text"
                  name="firstName"
                  value={formData.firstName}
                  onChange={handleInputChange}
                  className="input"
                  required
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü—Ä—ñ–∑–≤–∏—â–µ *
                </label>
                <input
                  type="text"
                  name="lastName"
                  value={formData.lastName}
                  onChange={handleInputChange}
                  className="input"
                  required
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è *
                </label>
                <input
                  type="date"
                  name="dateOfBirth"
                  value={formData.dateOfBirth}
                  onChange={handleInputChange}
                  className="input"
                  required
                />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ö—Ä–∞—ó–Ω–∞ *
                </label>
                <select
                  name="country"
                  value={formData.country}
                  onChange={handleInputChange}
                  className="input"
                  required
                >
                  <option value="">–û–±–µ—Ä—ñ—Ç—å –∫—Ä–∞—ó–Ω—É</option>
                  <option value="UA">–£–∫—Ä–∞—ó–Ω–∞</option>
                  <option value="US">–°–®–ê</option>
                  <option value="GB">–í–µ–ª–∏–∫–∞ –ë—Ä–∏—Ç–∞–Ω—ñ—è</option>
                  <option value="DE">–ù—ñ–º–µ—á—á–∏–Ω–∞</option>
                  <option value="FR">–§—Ä–∞–Ω—Ü—ñ—è</option>
                  <option value="ES">–Ü—Å–ø–∞–Ω—ñ—è</option>
                  <option value="IT">–Ü—Ç–∞–ª—ñ—è</option>
                  <option value="PL">–ü–æ–ª—å—â–∞</option>
                </select>
              </div>
            </div>
          </div>

          {/* Document Information */}
          <div className="card">
            <h2 className="text-xl font-semibold mb-4">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–æ–∫—É–º–µ–Ω—Ç</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞ *
                </label>
                <select
                  name="documentType"
                  value={formData.documentType}
                  onChange={handleInputChange}
                  className="input"
                  required
                >
                  <option value="passport">–ü–∞—Å–ø–æ—Ä—Ç</option>
                  <option value="id_card">ID –∫–∞—Ä—Ç–∫–∞</option>
                  <option value="drivers_license">–í–æ–¥—ñ–π—Å—å–∫–µ –ø–æ—Å–≤—ñ–¥—á–µ–Ω–Ω—è</option>
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ *
                </label>
                <input
                  type="text"
                  name="documentNumber"
                  value={formData.documentNumber}
                  onChange={handleInputChange}
                  className="input"
                  placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                  required
                />
              </div>
            </div>
          </div>

          {/* Document Upload */}
          <div className="card">
            <h2 className="text-xl font-semibold mb-4">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤</h2>
            <div className="space-y-4">
              {/* Document Front */}
              <FileUploadBox
                label="–õ–∏—Ü—å–æ–≤–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ *"
                description="–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —á—ñ—Ç–∫–µ —Ñ–æ—Ç–æ –ª–∏—Ü—å–æ–≤–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                file={files.documentFront}
                preview={previews.documentFront}
                onChange={(e) => handleFileChange(e, 'documentFront')}
                icon={FileText}
              />

              {/* Document Back (only for ID card) */}
              {formData.documentType === 'id_card' && (
                <FileUploadBox
                  label="–ó–≤–æ—Ä–æ—Ç–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ *"
                  description="–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —á—ñ—Ç–∫–µ —Ñ–æ—Ç–æ –∑–≤–æ—Ä–æ—Ç–Ω–æ—ó —Å—Ç–æ—Ä–æ–Ω–∏ ID –∫–∞—Ä—Ç–∫–∏"
                  file={files.documentBack}
                  preview={previews.documentBack}
                  onChange={(e) => handleFileChange(e, 'documentBack')}
                  icon={FileText}
                />
              )}

              {/* Selfie */}
              <FileUploadBox
                label="–°–µ–ª—Ñ—ñ –∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–º *"
                description="–ó—Ä–æ–±—ñ—Ç—å —Å–µ–ª—Ñ—ñ, —Ç—Ä–∏–º–∞—é—á–∏ –¥–æ–∫—É–º–µ–Ω—Ç –±—ñ–ª—è –æ–±–ª–∏—á—á—è"
                file={files.selfie}
                preview={previews.selfie}
                onChange={(e) => handleFileChange(e, 'selfie')}
                icon={Camera}
              />
            </div>
          </div>

          {/* Submit Button */}
          <div className="card bg-gray-50">
            <div className="flex items-start space-x-3 mb-4">
              <AlertCircle className="w-5 h-5 text-blue-600 mt-0.5" />
              <div className="text-sm text-gray-600">
                <p className="font-medium text-gray-900 mb-1">–ü–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:</p>
                <ul className="list-disc list-inside space-y-1">
                  <li>–ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —â–æ –≤—Å—ñ —Ñ–æ—Ç–æ —á—ñ—Ç–∫—ñ —Ç–∞ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ</li>
                  <li>–í–∞—à–µ –æ–±–ª–∏—á—á—è —ñ –¥–æ–∫—É–º–µ–Ω—Ç –º–∞—é—Ç—å –±—É—Ç–∏ —á—ñ—Ç–∫–æ –≤–∏–¥–∏–º—ñ –Ω–∞ —Å–µ–ª—Ñ—ñ</li>
                  <li>–í—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –º–∞—î —Å–ø—ñ–≤–ø–∞–¥–∞—Ç–∏ –∑ –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏</li>
                  <li>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–π–º–∞—î –∫—ñ–ª—å–∫–∞ —Å–µ–∫—É–Ω–¥</li>
                </ul>
              </div>
            </div>
            <button
              type="submit"
              disabled={isSubmitting}
              className="btn btn-primary w-full disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isSubmitting ? '–í—ñ–¥–ø—Ä–∞–≤–∫–∞...' : '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

// File Upload Component
const FileUploadBox = ({ label, description, file, preview, onChange, icon: Icon }) => {
  return (
    <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-primary-500 transition-colors">
      <div className="flex items-start space-x-4">
        <div className="flex-shrink-0">
          <div className="w-12 h-12 bg-primary-50 rounded-lg flex items-center justify-center">
            <Icon className="w-6 h-6 text-primary-600" />
          </div>
        </div>
        <div className="flex-1">
          <h3 className="font-medium text-gray-900 mb-1">{label}</h3>
          <p className="text-sm text-gray-500 mb-3">{description}</p>
          
          {preview ? (
            <div className="relative">
              <img
                src={preview}
                alt="Preview"
                className="w-full max-w-xs h-48 object-cover rounded-lg border border-gray-200"
              />
              <label className="mt-2 btn btn-secondary btn-sm cursor-pointer inline-block">
                <Upload className="w-4 h-4 mr-2 inline" />
                –ó–º—ñ–Ω–∏—Ç–∏ —Ñ–∞–π–ª
                <input
                  type="file"
                  accept="image/*"
                  onChange={onChange}
                  className="hidden"
                />
              </label>
            </div>
          ) : (
            <label className="btn btn-secondary btn-sm cursor-pointer inline-flex items-center">
              <Upload className="w-4 h-4 mr-2" />
              –û–±—Ä–∞—Ç–∏ —Ñ–∞–π–ª
              <input
                type="file"
                accept="image/*"
                onChange={onChange}
                className="hidden"
              />
            </label>
          )}
          
          {file && (
            <p className="text-xs text-gray-500 mt-2">
              {file.name} ({(file.size / 1024 / 1024).toFixed(2)} MB)
            </p>
          )}
        </div>
      </div>
    </div>
  );
};

export default KYCPage;
